/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Service Desk Public REST API
 * Public REST API for Jira Service Desk
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.servicedeskcloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.JsonTypeBean;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.RequestTypeFieldValueDTO;

/**
 * RequestTypeFieldDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-02T14:33:08.600+02:00[Europe/Prague]")
public class RequestTypeFieldDTO {
  @JsonProperty("fieldId")
  private String fieldId;

  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("required")
  private Boolean required;

  @JsonProperty("defaultValues")
  private List<RequestTypeFieldValueDTO> defaultValues = new ArrayList<>();

  @JsonProperty("validValues")
  private List<RequestTypeFieldValueDTO> validValues = new ArrayList<>();

  @JsonProperty("jiraSchema")
  private JsonTypeBean jiraSchema;

  public RequestTypeFieldDTO fieldId(String fieldId) {
    this.fieldId = fieldId;
    return this;
  }

   /**
   * ID of the field.
   * @return fieldId
  **/
  @ApiModelProperty(value = "ID of the field.")
  public String getFieldId() {
    return fieldId;
  }

  public void setFieldId(String fieldId) {
    this.fieldId = fieldId;
  }

  public RequestTypeFieldDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the field.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the field.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RequestTypeFieldDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the field.
   * @return description
  **/
  @ApiModelProperty(value = "Description of the field.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RequestTypeFieldDTO required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Indicates if the field is required (true) or not (false).
   * @return required
  **/
  @ApiModelProperty(value = "Indicates if the field is required (true) or not (false).")
  public Boolean getRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public RequestTypeFieldDTO defaultValues(List<RequestTypeFieldValueDTO> defaultValues) {
    this.defaultValues = defaultValues;
    return this;
  }

  public RequestTypeFieldDTO addDefaultValuesItem(RequestTypeFieldValueDTO defaultValuesItem) {
    if (this.defaultValues == null) {
      this.defaultValues = new ArrayList<>();
    }
    this.defaultValues.add(defaultValuesItem);
    return this;
  }

   /**
   * List of default values for the field.
   * @return defaultValues
  **/
  @ApiModelProperty(value = "List of default values for the field.")
  public List<RequestTypeFieldValueDTO> getDefaultValues() {
    return defaultValues;
  }

  public void setDefaultValues(List<RequestTypeFieldValueDTO> defaultValues) {
    this.defaultValues = defaultValues;
  }

  public RequestTypeFieldDTO validValues(List<RequestTypeFieldValueDTO> validValues) {
    this.validValues = validValues;
    return this;
  }

  public RequestTypeFieldDTO addValidValuesItem(RequestTypeFieldValueDTO validValuesItem) {
    if (this.validValues == null) {
      this.validValues = new ArrayList<>();
    }
    this.validValues.add(validValuesItem);
    return this;
  }

   /**
   * List of valid values for the field.
   * @return validValues
  **/
  @ApiModelProperty(value = "List of valid values for the field.")
  public List<RequestTypeFieldValueDTO> getValidValues() {
    return validValues;
  }

  public void setValidValues(List<RequestTypeFieldValueDTO> validValues) {
    this.validValues = validValues;
  }

  public RequestTypeFieldDTO jiraSchema(JsonTypeBean jiraSchema) {
    this.jiraSchema = jiraSchema;
    return this;
  }

   /**
   * Jira specific implementation details for the field in the UI.
   * @return jiraSchema
  **/
  @ApiModelProperty(value = "Jira specific implementation details for the field in the UI.")
  public JsonTypeBean getJiraSchema() {
    return jiraSchema;
  }

  public void setJiraSchema(JsonTypeBean jiraSchema) {
    this.jiraSchema = jiraSchema;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestTypeFieldDTO requestTypeFieldDTO = (RequestTypeFieldDTO) o;
    return Objects.equals(this.fieldId, requestTypeFieldDTO.fieldId) &&
        Objects.equals(this.name, requestTypeFieldDTO.name) &&
        Objects.equals(this.description, requestTypeFieldDTO.description) &&
        Objects.equals(this.required, requestTypeFieldDTO.required) &&
        Objects.equals(this.defaultValues, requestTypeFieldDTO.defaultValues) &&
        Objects.equals(this.validValues, requestTypeFieldDTO.validValues) &&
        Objects.equals(this.jiraSchema, requestTypeFieldDTO.jiraSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldId, name, description, required, defaultValues, validValues, jiraSchema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestTypeFieldDTO {\n");
    
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    defaultValues: ").append(toIndentedString(defaultValues)).append("\n");
    sb.append("    validValues: ").append(toIndentedString(validValues)).append("\n");
    sb.append("    jiraSchema: ").append(toIndentedString(jiraSchema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

