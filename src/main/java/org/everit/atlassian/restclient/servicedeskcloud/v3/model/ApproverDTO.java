/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Service Desk Public REST API
 * Public REST API for Jira Service Desk
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.servicedeskcloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.UserDTO;

/**
 * ApproverDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-02T14:33:08.600+02:00[Europe/Prague]")
public class ApproverDTO {
  @JsonProperty("approver")
  private UserDTO approver;

  /**
   * Decision made by the approver.
   */
  public enum ApproverDecisionEnum {
    APPROVED("approved"),
    
    DECLINED("declined"),
    
    PENDING("pending");

    private String value;

    ApproverDecisionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApproverDecisionEnum fromValue(String value) {
      for (ApproverDecisionEnum b : ApproverDecisionEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("approverDecision")
  private ApproverDecisionEnum approverDecision;

  public ApproverDTO approver(UserDTO approver) {
    this.approver = approver;
    return this;
  }

   /**
   * Details of the User who is providing approval.
   * @return approver
  **/
  @ApiModelProperty(value = "Details of the User who is providing approval.")
  public UserDTO getApprover() {
    return approver;
  }

  public void setApprover(UserDTO approver) {
    this.approver = approver;
  }

  public ApproverDTO approverDecision(ApproverDecisionEnum approverDecision) {
    this.approverDecision = approverDecision;
    return this;
  }

   /**
   * Decision made by the approver.
   * @return approverDecision
  **/
  @ApiModelProperty(value = "Decision made by the approver.")
  public ApproverDecisionEnum getApproverDecision() {
    return approverDecision;
  }

  public void setApproverDecision(ApproverDecisionEnum approverDecision) {
    this.approverDecision = approverDecision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApproverDTO approverDTO = (ApproverDTO) o;
    return Objects.equals(this.approver, approverDTO.approver) &&
        Objects.equals(this.approverDecision, approverDTO.approverDecision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approver, approverDecision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApproverDTO {\n");
    
    sb.append("    approver: ").append(toIndentedString(approver)).append("\n");
    sb.append("    approverDecision: ").append(toIndentedString(approverDecision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

