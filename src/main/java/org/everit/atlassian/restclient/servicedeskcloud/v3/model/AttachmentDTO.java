/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Service Desk Public REST API
 * Public REST API for Jira Service Desk
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.servicedeskcloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.AttachmentLinkDTO;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.DateDTO;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.UserDTO;

/**
 * AttachmentDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-02T14:33:08.600+02:00[Europe/Prague]")
public class AttachmentDTO {
  @JsonProperty("filename")
  private String filename;

  @JsonProperty("author")
  private UserDTO author;

  @JsonProperty("created")
  private DateDTO created;

  @JsonProperty("size")
  private Long size;

  @JsonProperty("mimeType")
  private String mimeType;

  @JsonProperty("_links")
  private AttachmentLinkDTO links;

  public AttachmentDTO filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * Filename of the item attached.
   * @return filename
  **/
  @ApiModelProperty(value = "Filename of the item attached.")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public AttachmentDTO author(UserDTO author) {
    this.author = author;
    return this;
  }

   /**
   * Details of the user who attached the file.
   * @return author
  **/
  @ApiModelProperty(value = "Details of the user who attached the file.")
  public UserDTO getAuthor() {
    return author;
  }

  public void setAuthor(UserDTO author) {
    this.author = author;
  }

  public AttachmentDTO created(DateDTO created) {
    this.created = created;
    return this;
  }

   /**
   * Date the attachment was added.
   * @return created
  **/
  @ApiModelProperty(value = "Date the attachment was added.")
  public DateDTO getCreated() {
    return created;
  }

  public void setCreated(DateDTO created) {
    this.created = created;
  }

  public AttachmentDTO size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size of the attachment in bytes.
   * @return size
  **/
  @ApiModelProperty(value = "Size of the attachment in bytes.")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public AttachmentDTO mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * MIME type of the attachment.
   * @return mimeType
  **/
  @ApiModelProperty(value = "MIME type of the attachment.")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public AttachmentDTO links(AttachmentLinkDTO links) {
    this.links = links;
    return this;
  }

   /**
   * Various URLs for the attachment.
   * @return links
  **/
  @ApiModelProperty(value = "Various URLs for the attachment.")
  public AttachmentLinkDTO getLinks() {
    return links;
  }

  public void setLinks(AttachmentLinkDTO links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentDTO attachmentDTO = (AttachmentDTO) o;
    return Objects.equals(this.filename, attachmentDTO.filename) &&
        Objects.equals(this.author, attachmentDTO.author) &&
        Objects.equals(this.created, attachmentDTO.created) &&
        Objects.equals(this.size, attachmentDTO.size) &&
        Objects.equals(this.mimeType, attachmentDTO.mimeType) &&
        Objects.equals(this.links, attachmentDTO.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, author, created, size, mimeType, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentDTO {\n");
    
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

