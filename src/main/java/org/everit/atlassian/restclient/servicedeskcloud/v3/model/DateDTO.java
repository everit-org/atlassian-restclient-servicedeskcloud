/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Service Desk Public REST API
 * Public REST API for Jira Service Desk
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.servicedeskcloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * DateDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-02T14:33:08.600+02:00[Europe/Prague]")
public class DateDTO {
  @JsonProperty("iso8601")
  private String iso8601;

  @JsonProperty("jira")
  private String jira;

  @JsonProperty("friendly")
  private String friendly;

  @JsonProperty("epochMillis")
  private Long epochMillis;

  public DateDTO iso8601(String iso8601) {
    this.iso8601 = iso8601;
    return this;
  }

   /**
   * Date in ISO8601 format.
   * @return iso8601
  **/
  @ApiModelProperty(value = "Date in ISO8601 format.")
  public String getIso8601() {
    return iso8601;
  }

  public void setIso8601(String iso8601) {
    this.iso8601 = iso8601;
  }

  public DateDTO jira(String jira) {
    this.jira = jira;
    return this;
  }

   /**
   * Date in the format used in the Jira REST APIs, which is ISO8601 format but extended with milliseconds. For example, 2016-09-28T23:08:32.097+1000.
   * @return jira
  **/
  @ApiModelProperty(value = "Date in the format used in the Jira REST APIs, which is ISO8601 format but extended with milliseconds. For example, 2016-09-28T23:08:32.097+1000.")
  public String getJira() {
    return jira;
  }

  public void setJira(String jira) {
    this.jira = jira;
  }

  public DateDTO friendly(String friendly) {
    this.friendly = friendly;
    return this;
  }

   /**
   * Date in a user-friendly text format.
   * @return friendly
  **/
  @ApiModelProperty(value = "Date in a user-friendly text format.")
  public String getFriendly() {
    return friendly;
  }

  public void setFriendly(String friendly) {
    this.friendly = friendly;
  }

  public DateDTO epochMillis(Long epochMillis) {
    this.epochMillis = epochMillis;
    return this;
  }

   /**
   * Date as the number of milliseconds that have elapsed since 00:00:00 Coordinated Universal Time (UTC), 1 January 1970.
   * @return epochMillis
  **/
  @ApiModelProperty(value = "Date as the number of milliseconds that have elapsed since 00:00:00 Coordinated Universal Time (UTC), 1 January 1970.")
  public Long getEpochMillis() {
    return epochMillis;
  }

  public void setEpochMillis(Long epochMillis) {
    this.epochMillis = epochMillis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DateDTO dateDTO = (DateDTO) o;
    return Objects.equals(this.iso8601, dateDTO.iso8601) &&
        Objects.equals(this.jira, dateDTO.jira) &&
        Objects.equals(this.friendly, dateDTO.friendly) &&
        Objects.equals(this.epochMillis, dateDTO.epochMillis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iso8601, jira, friendly, epochMillis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DateDTO {\n");
    
    sb.append("    iso8601: ").append(toIndentedString(iso8601)).append("\n");
    sb.append("    jira: ").append(toIndentedString(jira)).append("\n");
    sb.append("    friendly: ").append(toIndentedString(friendly)).append("\n");
    sb.append("    epochMillis: ").append(toIndentedString(epochMillis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

