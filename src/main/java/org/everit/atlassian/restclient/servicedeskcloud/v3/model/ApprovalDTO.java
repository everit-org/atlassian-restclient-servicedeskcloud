/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Service Desk Public REST API
 * Public REST API for Jira Service Desk
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.servicedeskcloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.ApproverDTO;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.DateDTO;
import org.everit.atlassian.restclient.servicedeskcloud.v3.model.SelfLinkDTO;

/**
 * ApprovalDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-02T14:33:08.600+02:00[Europe/Prague]")
public class ApprovalDTO {
  @JsonProperty("id")
  private String id;

  @JsonProperty("name")
  private String name;

  /**
   * Outcome of the approval, based on the approvals provided by all approvers.
   */
  public enum FinalDecisionEnum {
    APPROVED("approved"),
    
    DECLINED("declined"),
    
    PENDING("pending");

    private String value;

    FinalDecisionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FinalDecisionEnum fromValue(String value) {
      for (FinalDecisionEnum b : FinalDecisionEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("finalDecision")
  private FinalDecisionEnum finalDecision;

  @JsonProperty("canAnswerApproval")
  private Boolean canAnswerApproval;

  @JsonProperty("approvers")
  private List<ApproverDTO> approvers = new ArrayList<>();

  @JsonProperty("createdDate")
  private DateDTO createdDate;

  @JsonProperty("completedDate")
  private DateDTO completedDate;

  @JsonProperty("_links")
  private SelfLinkDTO links;

  public ApprovalDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the approval.
   * @return id
  **/
  @ApiModelProperty(value = "ID of the approval.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ApprovalDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Description of the approval being sought or provided.
   * @return name
  **/
  @ApiModelProperty(value = "Description of the approval being sought or provided.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ApprovalDTO finalDecision(FinalDecisionEnum finalDecision) {
    this.finalDecision = finalDecision;
    return this;
  }

   /**
   * Outcome of the approval, based on the approvals provided by all approvers.
   * @return finalDecision
  **/
  @ApiModelProperty(value = "Outcome of the approval, based on the approvals provided by all approvers.")
  public FinalDecisionEnum getFinalDecision() {
    return finalDecision;
  }

  public void setFinalDecision(FinalDecisionEnum finalDecision) {
    this.finalDecision = finalDecision;
  }

  public ApprovalDTO canAnswerApproval(Boolean canAnswerApproval) {
    this.canAnswerApproval = canAnswerApproval;
    return this;
  }

   /**
   * Indicates whether the user making the request is one of the approvers and can respond to the approval (true) or not (false).
   * @return canAnswerApproval
  **/
  @ApiModelProperty(value = "Indicates whether the user making the request is one of the approvers and can respond to the approval (true) or not (false).")
  public Boolean getCanAnswerApproval() {
    return canAnswerApproval;
  }

  public void setCanAnswerApproval(Boolean canAnswerApproval) {
    this.canAnswerApproval = canAnswerApproval;
  }

  public ApprovalDTO approvers(List<ApproverDTO> approvers) {
    this.approvers = approvers;
    return this;
  }

  public ApprovalDTO addApproversItem(ApproverDTO approversItem) {
    if (this.approvers == null) {
      this.approvers = new ArrayList<>();
    }
    this.approvers.add(approversItem);
    return this;
  }

   /**
   * Detailed list of the users who must provide a response to the approval.
   * @return approvers
  **/
  @ApiModelProperty(value = "Detailed list of the users who must provide a response to the approval.")
  public List<ApproverDTO> getApprovers() {
    return approvers;
  }

  public void setApprovers(List<ApproverDTO> approvers) {
    this.approvers = approvers;
  }

  public ApprovalDTO createdDate(DateDTO createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Date the approval was created.
   * @return createdDate
  **/
  @ApiModelProperty(value = "Date the approval was created.")
  public DateDTO getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(DateDTO createdDate) {
    this.createdDate = createdDate;
  }

  public ApprovalDTO completedDate(DateDTO completedDate) {
    this.completedDate = completedDate;
    return this;
  }

   /**
   * Date the approval was completed.
   * @return completedDate
  **/
  @ApiModelProperty(value = "Date the approval was completed.")
  public DateDTO getCompletedDate() {
    return completedDate;
  }

  public void setCompletedDate(DateDTO completedDate) {
    this.completedDate = completedDate;
  }

  public ApprovalDTO links(SelfLinkDTO links) {
    this.links = links;
    return this;
  }

   /**
   * The REST API URL of the approval.
   * @return links
  **/
  @ApiModelProperty(value = "The REST API URL of the approval.")
  public SelfLinkDTO getLinks() {
    return links;
  }

  public void setLinks(SelfLinkDTO links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApprovalDTO approvalDTO = (ApprovalDTO) o;
    return Objects.equals(this.id, approvalDTO.id) &&
        Objects.equals(this.name, approvalDTO.name) &&
        Objects.equals(this.finalDecision, approvalDTO.finalDecision) &&
        Objects.equals(this.canAnswerApproval, approvalDTO.canAnswerApproval) &&
        Objects.equals(this.approvers, approvalDTO.approvers) &&
        Objects.equals(this.createdDate, approvalDTO.createdDate) &&
        Objects.equals(this.completedDate, approvalDTO.completedDate) &&
        Objects.equals(this.links, approvalDTO.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, finalDecision, canAnswerApproval, approvers, createdDate, completedDate, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApprovalDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    finalDecision: ").append(toIndentedString(finalDecision)).append("\n");
    sb.append("    canAnswerApproval: ").append(toIndentedString(canAnswerApproval)).append("\n");
    sb.append("    approvers: ").append(toIndentedString(approvers)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    completedDate: ").append(toIndentedString(completedDate)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

